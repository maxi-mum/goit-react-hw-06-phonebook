{"version":3,"sources":["components/ContactsList/List.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/TodoContact/TodoContact.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/TodoContact/TodoContact.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","ChangeFilter","contacts","createReducer","actions","state","filter","_","combineReducers","middleware","storage","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","TodoContact","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","s","titleText","this","headStyle","labelStyle","inputStyle","onChange","type","button","Component","connect","dispatch","contactsActions","getVisibileContacts","allContacts","normalizedFilter","toLowerCase","includes","onDeleteContact","map","listItem","onClick","Filter","filterTitle","defaultProps","filterValue","target","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8362e8a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"List_contacts__16sbc\",\"listItem\":\"List_listItem__1_6O4\",\"button\":\"List_button__2n2nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelStyle\":\"Filter_labelStyle__2Fq66\"};","import shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contacts/Add\", (name, number) => {\r\n  return {\r\n    payload: { id: shortid.generate(), name, number },\r\n  };\r\n});\r\nconst deleteContact = createAction(\"contacts/Delete\");\r\nconst ChangeFilter = createAction(\"contacts/ChangeFilter\");\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, deleteContact, ChangeFilter };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./contacts-actions\";\r\n\r\nconst contacts = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.ChangeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ contacts, filter });\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst persistConfig = {\r\n  key: \"hello\",\r\n  storage,\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: persistReducer(persistConfig, contactsReducer),\r\n// });\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter \"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React, { Component } from \"react\";\r\nimport s from \"./TodoContact.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\nclass TodoContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.name, this.state.number);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.titleText}>\r\n        <h1>Phonebook</h1>\r\n        <form onSubmit={this.handleSubmit} className={s.headStyle}>\r\n          <label className={s.labelStyle}>\r\n            Name\r\n            <input\r\n              className={s.inputStyle}\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={s.labelStyle}>\r\n            Number\r\n            <input\r\n              className={s.inputStyle}\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={s.button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoContact);\r\n","import React from \"react\";\r\nimport s from \"./List.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={s.contacts}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={s.listItem} key={id}>\r\n        <p>\r\n          {name}: {number}\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          className={s.button}\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Удалить\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibileContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { contacts, filter } }) => ({\r\n  contacts: getVisibileContacts(contacts, filter),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div className={s.filterTitle}>\r\n    <h2>Contacts</h2>\r\n    <label className={s.labelStyle}>\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.defaultProps = {\r\n  filterValue: \"\",\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(contactsActions.ChangeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport TodoContact from \"./components/TodoContact\";\r\nimport ContactsList from \"./components/ContactsList\";\r\nimport Filter from \"./components/Filter\";\r\n\r\nclass App extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <TodoContact />\r\n        <Filter />\r\n        <ContactsList />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headStyle\":\"TodoContact_headStyle__226YT\",\"labelStyle\":\"TodoContact_labelStyle__2uzbT\",\"inputStyle\":\"TodoContact_inputStyle__v7LkN\",\"button\":\"TodoContact_button__3KXg3\",\"titleText\":\"TodoContact_titleText__1RsXt\"};"],"sourceRoot":""}